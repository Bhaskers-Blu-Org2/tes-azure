include required(classpath("application"))

backend {
  default = "TES"
  providers {
    TES {
      actor-factory = "cromwell.backend.impl.tes.TesBackendLifecycleActorFactory"
      config {
        # calculate md5 on all outputs automatically (under assumption they may be used as inputs elsewhere)
        filesystems {
          local {
            caching {
              # When copying a cached result, what type of file duplication should occur. Attempted in the order listed below:
              duplication-strategy: [
                "soft-link", "copy", "hard-link"
              ]

              # Possible values: file, path, path+modtime
              # "path*" strategies only effective if the duplication-strategy (above) is set to "soft-link"
              # Note: this is only used by the Config backend/lifecycle actor, not TES
              hashing-strategy: "path+modtime"

              # When true, will check if a sibling file with the same name and the .md5 extension exists, and if it does, use the content of this file as a hash. If false or the md5 does not exist, will proceed with the above-defined hashing strategy.
              # Note: this is only used by the Config backend/lifecycle actor, not TES
              check-sibling-md5: true

              # resolve docker id to named tags (like 'latest') instead of using SHA
              lookup-docker-hash = false
            }
          }
        }
        script-epilogue = """
for file in `find .`; do
    if [ -f "$file" ]; then
        echo -n "`md5sum "$file" | cut -d ' ' -f 1`" > "$file.md5"
    fi
done
sync
"""
        temporary-directory = "$(mktemp -d \"/$AZ_BATCH_TASK_DIR\"/tmp.XXXXXX)"
        #endpoint = "http://host.docker.internal:5000/v1/tasks"
        endpoint = "http://tesazure-NNNNN.azurewebsites.net/v1/tasks"

        # Cromwell supplies local paths to TES so we need to ensure the file paths match between the Cromwell server
        # task containers. Therefore 'root' path as configured below requires that cromwell-executions be mapped as a volume
        # on the cromwell server container
        root = "/tes-wd/shared-global"
        dockerRoot = "/tes-wd/shared-global"

        # for TESK, if used
        glob-link-command = "ls -L GLOB_PATTERN 2> /dev/null | xargs -I ? ln -s ? GLOB_DIRECTORY"
      }
    }
  }
}
system {
  #max-concurrent-workflows = 2
  #max-concurrent-jobs = 2

  # If enabled, cache the file hash results from call caching to avoid repeat hashing of same file - see DB note below
  file-hash-cache = false

  # read limit in bytes - default is 128k
  input-read-limits {
    lines = 1048576
  }
}

call-caching {
  # If enabled, re-use the result of a past task if the inputs are identical - see DB note below
  # enabled = true

  # do not make a bad cache hit (e.g. due to ACLs) invalidate the cache item entirely
  invalidate-bad-cache-results = true
}

workflow-options {
    workflow-log-dir = "cromwell-workflow-logs"
    # if false, do not delete logs after exiting (i.e. preserve on failure)
    workflow-log-temporary = false
}

# DB is required for call caching -- uncomment and replace the all caps below
# Note that call caching is only compatible when workflows are configured to use
# the Azure Files mounted directory (/tes-wd/shared-global).

#database {
#  profile = "slick.jdbc.MySQLProfile$"
#  db {
#    driver = "com.mysql.cj.jdbc.Driver"
#    url = "jdbc:mysql://CROMWELL_DB_HOST/CROMWELL_DB_NAME?rewriteBatchedStatements=true&serverTimezone=CONTINENT/TIMEZONE"
#    user = "CROMWELL_DB_USER"
#    password = "CROMWELL_DB_PASSWORD"
#    connectionTimeout = 5000
#  }
# }

